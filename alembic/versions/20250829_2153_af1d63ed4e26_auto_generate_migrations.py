"""auto generate migrations

Revision ID: af1d63ed4e26
Revises: 
Create Date: 2025-08-29 21:53:32.068387

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'af1d63ed4e26'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('category',
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['category.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_category_id'), 'category', ['id'], unique=False)
    op.create_table('user',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('role', sa.String(length=5), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=True),
    sa.Column('phone_number', sa.String(length=16), nullable=True),
    sa.Column('password', sa.String(length=64), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('phone_number'),
    sa.UniqueConstraint('username')
    )
    op.create_table('ad',
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('deal_type', sa.Enum('sale', 'rent', name='dealtype'), nullable=False),
    sa.Column('city', sa.String(), nullable=True),
    sa.Column('complex_name', sa.String(), nullable=True),
    sa.Column('street', sa.String(), nullable=True),
    sa.Column('house_number', sa.String(), nullable=True),
    sa.Column('latitude', sa.Float(precision=8), nullable=False),
    sa.Column('longitude', sa.Float(precision=8), nullable=False),
    sa.Column('floors_in_building', sa.Integer(), nullable=True),
    sa.Column('current_floor', sa.Integer(), nullable=True),
    sa.Column('rooms_count', sa.Integer(), nullable=True),
    sa.Column('bathrooms_count', sa.Integer(), nullable=True),
    sa.Column('bedrooms_count', sa.Integer(), nullable=True),
    sa.Column('total_area', sa.Float(), nullable=True),
    sa.Column('living_area', sa.Float(), nullable=True),
    sa.Column('kitchen_area', sa.Float(), nullable=True),
    sa.Column('ceiling_height', sa.Float(), nullable=True),
    sa.Column('image_urls', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('price', sa.Integer(), nullable=True),
    sa.Column('currency', sa.String(), nullable=False),
    sa.Column('commission_from_buyer', sa.Boolean(), nullable=True),
    sa.Column('contact_type', sa.Enum('realtor', 'owner', name='contacttype'), nullable=False),
    sa.Column('full_name', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('phone_number', sa.String(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['category.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ad_id'), 'ad', ['id'], unique=False)
    op.create_table('category_name',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('lang', sa.String(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['category.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_category_name_id'), 'category_name', ['id'], unique=False)
    op.create_table('otp',
    sa.Column('code', sa.String(length=6), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('used', sa.Boolean(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_otp_id'), 'otp', ['id'], unique=False)
    op.create_table('comment',
    sa.Column('text', sa.Text(), nullable=False),
    sa.Column('ad_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['ad_id'], ['ad.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_comment_id'), 'comment', ['id'], unique=False)
    op.create_table('popular_ads',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('ad_id', sa.Integer(), nullable=False),
    sa.Column('added_by', sa.UUID(), nullable=False),
    sa.Column('added_at', sa.DateTime(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['ad_id'], ['ad.id'], ),
    sa.ForeignKeyConstraint(['added_by'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('ad_id')
    )
    op.create_index(op.f('ix_popular_ads_id'), 'popular_ads', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_popular_ads_id'), table_name='popular_ads')
    op.drop_table('popular_ads')
    op.drop_index(op.f('ix_comment_id'), table_name='comment')
    op.drop_table('comment')
    op.drop_index(op.f('ix_otp_id'), table_name='otp')
    op.drop_table('otp')
    op.drop_index(op.f('ix_category_name_id'), table_name='category_name')
    op.drop_table('category_name')
    op.drop_index(op.f('ix_ad_id'), table_name='ad')
    op.drop_table('ad')
    op.drop_table('user')
    op.drop_index(op.f('ix_category_id'), table_name='category')
    op.drop_table('category')
    # ### end Alembic commands ###
