"""add_one_id_info_model

Revision ID: 182fbaeb3704
Revises: 254448476803
Create Date: 2025-09-03 10:55:37.463260

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '182fbaeb3704'
down_revision: Union[str, None] = '254448476803'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('one_id_info',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('pin', sa.String(length=14), nullable=False, comment='Personal identification number (JShShIR)'),
    sa.Column('one_id_user_id', sa.String(length=255), nullable=False, comment='One ID user identifier'),
    sa.Column('one_id_session_id', sa.String(length=255), nullable=True, comment='One ID session identifier'),
    sa.Column('full_name', sa.String(length=255), nullable=False, comment='Full name from One ID'),
    sa.Column('first_name', sa.String(length=255), nullable=False, comment='First name from One ID'),
    sa.Column('last_name', sa.String(length=255), nullable=False, comment='Last name from One ID'),
    sa.Column('middle_name', sa.String(length=255), nullable=False, comment="Middle name (father's name) from One ID"),
    sa.Column('passport_number', sa.String(length=20), nullable=False, comment='Passport number from One ID'),
    sa.Column('birth_date', sa.Date(), nullable=False, comment='Birth date from One ID'),
    sa.Column('user_type', sa.String(length=1), nullable=False, comment='User type (I-Individual, L-Legal)'),
    sa.Column('is_verified', sa.Boolean(), nullable=False, comment='User verification status from One ID'),
    sa.Column('validation_method', sa.String(length=255), nullable=True, comment='Verification methods used'),
    sa.Column('auth_method', sa.String(length=20), nullable=True, comment='Authentication method'),
    sa.Column('pkcs_legal_tin', sa.String(length=9), nullable=True, comment='Legal entity TIN for PKCS auth'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('one_id_user_id'),
    sa.UniqueConstraint('pin'),
    sa.UniqueConstraint('user_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'user', type_='unique')
    op.drop_column('user', 'email')
    op.create_index('ix_otp_id', 'otp', ['id'], unique=False)
    op.alter_column('otp', 'id',
               existing_type=sa.UUID(),
               type_=sa.INTEGER(),
               existing_nullable=False)
    op.create_index('ix_comment_id', 'comment', ['id'], unique=False)
    op.alter_column('comment', 'id',
               existing_type=sa.UUID(),
               type_=sa.INTEGER(),
               existing_nullable=False)
    op.alter_column('ad', 'longitude',
               existing_type=sa.Float(precision=8),
               type_=sa.REAL(),
               existing_nullable=False)
    op.alter_column('ad', 'latitude',
               existing_type=sa.Float(precision=8),
               type_=sa.REAL(),
               existing_nullable=False)
    op.drop_table('one_id_info')
    # ### end Alembic commands ###
