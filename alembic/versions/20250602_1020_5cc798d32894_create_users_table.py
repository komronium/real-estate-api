"""create users table

Revision ID: 5cc798d32894
Revises: 8f1d32b074dd
Create Date: 2025-06-02 10:20:39.363944

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '5cc798d32894'
down_revision: Union[str, None] = '8f1d32b074dd'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

deal_type_enum = sa.Enum('SALE', 'RENT', name='dealtype')
property_type_enum = sa.Enum('YER_UCHASTKASI', 'HOVLI', 'XONADON', 'NOTURAR', 'SANOAT', name='propertytype')
contact_type_enum = sa.Enum('REALTOR', 'OWNER', name='contacttype')


def upgrade() -> None:
    deal_type_enum.create(op.get_bind(), checkfirst=True)
    property_type_enum.create(op.get_bind(), checkfirst=True)
    contact_type_enum.create(op.get_bind(), checkfirst=True)

    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('ad', sa.Column('deal_type', deal_type_enum, nullable=False, server_default='SALE'))
    op.add_column('ad', sa.Column('property_type', property_type_enum, nullable=False, server_default='YER_UCHASTKASI'))
    op.add_column('ad', sa.Column('city', sa.String(), nullable=True))
    op.add_column('ad', sa.Column('complex_name', sa.String(), nullable=True))
    op.add_column('ad', sa.Column('street', sa.String(), nullable=True))
    op.add_column('ad', sa.Column('house_number', sa.String(), nullable=True))
    op.add_column('ad', sa.Column('floors_in_building', sa.Integer(), nullable=True))
    op.add_column('ad', sa.Column('current_floor', sa.Integer(), nullable=True))
    op.add_column('ad', sa.Column('rooms_count', sa.Integer(), nullable=True))
    op.add_column('ad', sa.Column('bathrooms_count', sa.Integer(), nullable=True))
    op.add_column('ad', sa.Column('bedrooms_count', sa.Integer(), nullable=True))
    op.add_column('ad', sa.Column('total_area', sa.Float(), nullable=True))
    op.add_column('ad', sa.Column('living_area', sa.Float(), nullable=True))
    op.add_column('ad', sa.Column('kitchen_area', sa.Float(), nullable=True))
    op.add_column('ad', sa.Column('ceiling_height', sa.Float(), nullable=True))
    op.add_column('ad', sa.Column('image_urls', postgresql.ARRAY(sa.String()), nullable=True))
    op.add_column('ad', sa.Column('currency', sa.String(), nullable=False))
    op.add_column('ad', sa.Column('commission_from_buyer', sa.Boolean(), nullable=True))
    op.add_column('ad', sa.Column('contact_type', contact_type_enum, nullable=False))
    op.alter_column('ad', 'description',
               existing_type=sa.VARCHAR(),
               type_=sa.Text(),
               existing_nullable=False)
    op.drop_column('ad', 'image_url')


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_index('ix_user_id', 'user', ['id'], unique=True)
    op.alter_column('otp', 'user_id',
               existing_type=sa.Integer(),
               type_=sa.UUID(),
               existing_nullable=True)
    op.add_column('ad', sa.Column('image_url', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.alter_column('ad', 'user_id',
               existing_type=sa.Integer(),
               type_=sa.UUID(),
               existing_nullable=True)
    op.alter_column('ad', 'description',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(),
               existing_nullable=False)
    op.drop_column('ad', 'contact_type')
    op.drop_column('ad', 'commission_from_buyer')
    op.drop_column('ad', 'currency')
    op.drop_column('ad', 'image_urls')
    op.drop_column('ad', 'ceiling_height')
    op.drop_column('ad', 'kitchen_area')
    op.drop_column('ad', 'living_area')
    op.drop_column('ad', 'total_area')
    op.drop_column('ad', 'bedrooms_count')
    op.drop_column('ad', 'bathrooms_count')
    op.drop_column('ad', 'rooms_count')
    op.drop_column('ad', 'current_floor')
    op.drop_column('ad', 'floors_in_building')
    op.drop_column('ad', 'house_number')
    op.drop_column('ad', 'street')
    op.drop_column('ad', 'complex_name')
    op.drop_column('ad', 'city')
    op.drop_column('ad', 'property_type')
    op.drop_column('ad', 'deal_type')
    # ### end Alembic commands ###
