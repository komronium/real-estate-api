"""Remove gold verification fields from Ad model

Revision ID: 4a790a0142df
Revises: 4c7270538aec
Create Date: 2025-09-18 20:33:16.893744

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '4a790a0142df'
down_revision: Union[str, None] = '4c7270538aec'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('ad', 'gold_verification_comment')
    op.drop_column('ad', 'gold_verification_requested_at')
    op.drop_column('ad', 'is_gold_verified')
    op.drop_column('ad', 'gold_verification_processed_at')
    op.drop_column('ad', 'gold_verification_status')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('user', sa.Column('email', sa.VARCHAR(length=255), autoincrement=False, nullable=True, comment='Email address'))
    op.create_unique_constraint('user_email_key', 'user', ['email'])
    op.add_column('ad', sa.Column('gold_verification_status', postgresql.ENUM('pending', 'approved', 'rejected', name='goldverificationstatus'), autoincrement=False, nullable=False))
    op.add_column('ad', sa.Column('gold_verification_processed_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
    op.add_column('ad', sa.Column('is_gold_verified', sa.BOOLEAN(), autoincrement=False, nullable=False, comment='Gold verification status'))
    op.add_column('ad', sa.Column('gold_verification_requested_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
    op.add_column('ad', sa.Column('gold_verification_comment', sa.TEXT(), autoincrement=False, nullable=True, comment='Admin comment for gold verification'))
    op.alter_column('ad', 'longitude',
               existing_type=sa.Float(precision=8),
               type_=sa.REAL(),
               existing_nullable=False)
    op.alter_column('ad', 'latitude',
               existing_type=sa.Float(precision=8),
               type_=sa.REAL(),
               existing_nullable=False)
    # ### end Alembic commands ###
